[{"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\index.js":"1","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\App.js":"2","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\HomeClient.js":"3","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Main.js":"4","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Login.js":"5","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\HomeDev.js":"6","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\ProfileDev.js":"7","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Signup.js":"8","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\ClientProfile.js":"9","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Search.js":"10","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\About.js":"11","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\ProfileClient.js":"12","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\Navbar\\index.js":"13","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\Footer\\Footer.js":"14","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\utils\\mutations.js":"15","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\utils\\queries.js":"16","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\utils\\auth.js":"17","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\FrontEndList\\index.js":"18","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\FullStackList\\index.js":"19","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\HomeDevList\\index.js":"20","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\BackEndList\\index.js":"21","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\SecondHomeDevList\\index.js":"22","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\DeveloperList\\index.js":"23","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\BuyersList\\index.js":"24"},{"size":274,"mtime":1661217380792,"results":"25","hashOfConfig":"26"},{"size":2481,"mtime":1661230253208,"results":"27","hashOfConfig":"26"},{"size":816,"mtime":1661216747853,"results":"28","hashOfConfig":"26"},{"size":4145,"mtime":1661193924368,"results":"29","hashOfConfig":"26"},{"size":2987,"mtime":1661222129973,"results":"30","hashOfConfig":"26"},{"size":5588,"mtime":1661215982854,"results":"31","hashOfConfig":"26"},{"size":15186,"mtime":1661222111314,"results":"32","hashOfConfig":"26"},{"size":4193,"mtime":1661221651722,"results":"33","hashOfConfig":"26"},{"size":9640,"mtime":1661222705788,"results":"34","hashOfConfig":"26"},{"size":3401,"mtime":1661193924370,"results":"35","hashOfConfig":"26"},{"size":11633,"mtime":1661221543303,"results":"36","hashOfConfig":"26"},{"size":3832,"mtime":1661220581696,"results":"37","hashOfConfig":"26"},{"size":4961,"mtime":1661220300674,"results":"38","hashOfConfig":"26"},{"size":2277,"mtime":1661194714407,"results":"39","hashOfConfig":"26"},{"size":789,"mtime":1661203061005,"results":"40","hashOfConfig":"26"},{"size":948,"mtime":1661203061006,"results":"41","hashOfConfig":"26"},{"size":511,"mtime":1661203061005,"results":"42","hashOfConfig":"26"},{"size":1947,"mtime":1661194942813,"results":"43","hashOfConfig":"26"},{"size":2215,"mtime":1661195013179,"results":"44","hashOfConfig":"26"},{"size":2526,"mtime":1661195149019,"results":"45","hashOfConfig":"26"},{"size":2047,"mtime":1661194459359,"results":"46","hashOfConfig":"26"},{"size":2121,"mtime":1661216578674,"results":"47","hashOfConfig":"26"},{"size":1726,"mtime":1661194609228,"results":"48","hashOfConfig":"26"},{"size":2239,"mtime":1661194552834,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ciwlu9",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\index.js",[],["103","104"],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\App.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\HomeClient.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Main.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Login.js",["105"],"import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nexport default function Login(props) {\n    const [formState, setFormState] = useState({ email: '', password: '' });\n    const [login, { error, data }] = useMutation(LOGIN_USER);\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const { data } = await login({\n                variables: { ...formState },\n            });\n\n            Auth.login(data.login.token);\n\n            if (data.login.user.role === \"developer\") {\n                window.location.assign('/homedev');\n            } else {\n                window.location.assign('/homecli');\n            }\n\n        } catch (e) {\n            console.error({error});\n        }\n\n        setFormState({\n            email: '',\n            password: '',\n        });\n    };\n\n    return (<div style={\n        { backgroundColor: '#f2f7f2ff', padding: '10px' }} >\n        <div className='login-container'\n            style={\n                { backgroundColor: '#294A66', border: 'none', marginTop: '110px', padding: '30px 20px 50px' }} >\n            <p style={\n                { color: '#F0A202', textAlign: 'center', fontSize: '30px' }} >\n                Login to Use <span style={\n                    { fontWeight: 'bold' }} > Find Your Coder </span>! </p>\n            <div >\n                <Form className='login-form'\n                    style={\n                        { backgroundColor: '#F0A202' }} >\n                    <Form.Group >\n                        <Form.Label style={\n                            { margin: '5px 0', fontSize: '20px' }} > Email </Form.Label>\n                        <Form.Control name='email'\n                            type='email'\n                            placeholder='email'\n                            value={formState.email}\n                            onChange={handleChange} > </Form.Control> <hr />\n                        <Form.Label style={\n                            { fontSize: '20px' }} > Password </Form.Label>\n                        <Form.Control name='password'\n                            type='password'\n                            placeholder='password'\n                            value={formState.password}\n                            onChange={handleChange}> </Form.Control>\n                    </Form.Group>\n                    <Button style={\n                        { backgroundColor: '#294A66', border: 'none', fontSize: '20px', padding: '12px 24px', marginTop: '15px' }}\n                        onClick={handleFormSubmit} > Login </Button>\n                </Form>\n            </div>\n        </div>\n    </div>\n    );\n};","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\HomeDev.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\ProfileDev.js",["106"],"import React from \"react\";\nimport Axios from 'axios';\nimport { useState } from \"react\";\nimport { Form, Col, Row, Button, Modal } from \"react-bootstrap\";\nimport { useParams, Navigate } from 'react-router-dom';\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { UPDATE_USER } from \"../utils/mutations\";\nimport { QUERY_SINGLE_USER, QUERY_ME } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\"\n\nexport default function ProfileDev() {\n    const { userId: userParam } = useParams();\n\n    const { loading, data } = useQuery(userParam ? QUERY_SINGLE_USER : QUERY_ME, {\n        variables: { userId: userParam },\n    });\n\n    // console.log(data)\n    const user = data?.me || data?.user || {};\n\n    // console.log(data)\n    // console.log(user)\n    const [modalData, setModalData] = useState({})\n    const [updateUser, { error }] = useMutation(UPDATE_USER);\n    const [show, setShow] = useState(false);\n\n    if (Auth.loggedIn() && Auth.getProfile().data._id === userParam) {\n        return <Navigate to=\"/me\" />\n    }\n\n    if (loading) {\n        return <div> Loading... </div>\n    }\n\n\n    if (!user?.fullName) {\n        return (<h4 style={\n            { padding: '40px', textAlign: 'center', fontSize: '30px', margin: '65px', backgroundColor: '#4AB8B1', color: 'white' }} >\n            You need to be logged in to see your profile page.Use the navigation links above to sign up or log in !\n        </h4>\n        );\n    }\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        // console.log(value)\n        setModalData({ ...modalData, [name]: value, })\n    }\n\n    const handleIntegerChange = (event) => {\n        const { name, value } = event.target;\n        // console.log(value)\n        setModalData({ ...modalData, [name]: parseInt(value), })\n    }\n\n    const uploadImage = (files) => {\n        const formData = new FormData();\n        formData.append(\"file\", files[0]);\n        formData.append(\"upload_preset\", \"vylq4hww\");\n\n        Axios.post(\"https://api.cloudinary.com/v1_1/carissamero/image/upload\", formData)\n            .then((res) => {\n                const profileImageURL = res.data.secure_url;\n                setModalData({ ...modalData, profileImage: profileImageURL })\n            })\n            .catch(e => {\n                console.log({error});\n            })\n    };\n\n    const handleModalSubmit = async (event) => {\n        event.preventDefault();\n\n        // console.log(modalData)\n        try {\n            const { data } = await updateUser({\n                variables: { userData: { ...modalData } }\n            })\n\n            handleClose()\n            window.location.reload()\n\n        } catch (e) {\n            console.error({error})\n        }\n    }\n\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true);\n    return (\n        <div className=\"profiledevcont\"\n            style={{ backgroundColor: \"#F0A202\" }}>\n\n            <h1 className=\"mainh1\"\n                style={{ backgroundColor: '#F0A202', paddingTop: '50px' }} > PROFILE:\n            </h1>\n\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n\n                <img src={user.profileImage}\n                    style={{ maxWidth: \"500px\", display: 'flex' }}\n                    alt={\"user profile\"} >\n                </img>\n            </div>\n\n            <div className='profile' >\n                <div className=\"profile-info\" >\n                    <h2 className='profiletitles' > Name: </h2>\n                    <p className='profiletext' > {user.fullName} </p>\n                    <h2 className='profiletitles' > Description: </h2>\n                    <p className='profiletext' > {user.userDescription} </p>\n                    <h2 className='profiletitles' > Type of developer: </h2>\n                    <p className='profiletext' > {user.primaryFocus} </p>\n                    <h2 className='profiletitles' > Skills: </h2>\n                    <p className='profiletext' > {user.skillSet} </p>\n                    <h2 className='profiletitles' > Hourly rate: </h2>\n                    <p className='profiletext' > $ {user.hourlyRate}/hr</p >\n                    <h2 className='profiletitles' > Company: </h2>\n                    <p className='profiletext' > {user.company} </p>\n                    <h2 className='profiletitles' > Project name: </h2>\n                    <p className='profiletext' > {user.sampleProjectName} </p>\n                    <h2 className='profiletitles' > Project URL: </h2>\n\n                    <a className='profiletext'\n                        href={user.sampleProjectURL}> {user.sampleProjectURL}\n                    </a>\n\n                    <h2 className='profiletitles' > Linkedin URL: </h2>\n\n                    <a className='profiletext'\n                        href={user.linkedIn} > {user.linkedIn}\n                    </a>\n\n                    <h2 className='profiletitles' > Github URL </h2>\n\n                    <a className='profiletext'\n                        href={user.gitHub} > {user.gitHub}\n                    </a>\n\n                    <h2 className='profiletitles' > Services: </h2>\n                    <p className='profiletext' > {user.servicesOffered} </p>\n                    <h2 className='profiletitles' > Contact Info: </h2>\n                    <p className='profiletext' > {user.email} </p>\n\n                    <Button variant=\"primary\"\n                        onClick={handleShow}\n                        style={\n                            {\n                                backgroundColor: \"#4AB8B1\",\n                                border: \"none\",\n                                fontSize: \"20px\",\n                                padding: \"12px 24px\",\n                                marginTop: \"15px\",\n                            }\n                        } >\n                        Edit Profile\n                    </Button>\n\n                </div>\n            </div>\n\n            <Modal\n                show={show}\n                onHide={handleClose}>\n                <Modal.Header closeButton >\n                    <Modal.Title > Edit Profile </Modal.Title>\n                </Modal.Header>\n\n                <Form className=\"profileform\"\n                    action=\"/upload\"\n                    method=\"POST\"\n                    enctype=\"multipart/form-data\" >\n\n                    <Form.Group controlId=\"formFile\"\n                        className=\"mb-3\" >\n\n                        <Form.Label > Upload profile image file </Form.Label>\n                        <Form.Control type=\"file\"\n                            accept=\"image/*\"\n                            onChange={\n                                (event) => {\n                                    uploadImage(event.target.files);\n                                }\n                            } />\n                    </Form.Group>\n\n                    <Form.Group as={Row}\n                        className=\"mb-3\"\n                        controlId=\"formPlaintextEmail\" >\n\n                        <Form.Label className=\"formlabel\" > Full Name </Form.Label>\n\n                        <Col sm=\"30\" >\n\n                            <Form.Control type=\"text\"\n                                placeholder={user.fullName}\n                                value={modalData.fullName}\n                                name=\"fullName\"\n                                onChange={handleInputChange}\n                            />\n                        </Col>\n\n                    </Form.Group>\n\n                    <Form.Group as={Row}\n                        style={\n                            { paddingBottom: '10px' }}\n                        className=\"mb-3\"\n                        controlId=\"formPlaintextEmail\" >\n                        <Form.Label > What type of web developer are you ? </Form.Label>\n\n                        <Form.Select aria-label=\"Floating label select example\"\n                            name=\"primaryFocus\"\n                            onChange={handleInputChange} >\n                            <option style={\n                                { color: 'lightgray' }}\n                                value={modalData.primaryFocus} > Open this menu to select </option>\n                            <option value=\"Front-End\" > Front - End </option>\n                            <option value=\"Back-End\" > Back - End </option>\n                            <option value=\"Full-Stack\" > Full - Stack </option>\n                        </Form.Select>\n\n                    </Form.Group>\n\n                    <Form.Group as={Row}\n                        className=\"mb-3\"\n                        controlId=\"formPlaintextPassword\" >\n                        <Form.Label > Profile description </Form.Label>\n                        <Col sm=\"30\" >\n                            <Form.Control type=\"text\"\n                                placeholder={user.userDescription}\n                                name=\"userDescription\"\n                                value={modalData.userDescription}\n                                onChange={handleInputChange} />\n                        </Col>\n\n                    </Form.Group>\n\n                    <Form.Group as={Row}\n                        className=\"mb-3\"\n                        controlId=\"formPlaintextPassword\" >\n                        <Form.Label > Skills </Form.Label>\n                        <Col sm=\"30\" >\n                            <Form.Control type=\"skills\"\n                                placeholder={user.skillSet}\n                                name=\"skillSet\"\n                                value={modalData.skillSet}\n                                onChange={handleInputChange} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row}\n                        className=\"mb-3\"\n                        controlId=\"formPlaintextPassword\" >\n                        <Form.Label > Hourly rate </Form.Label>\n                        <Col sm=\"30\" >\n                            <Form.Control type=\"text\"\n                                placeholder={user.hourlyRate}\n                                name=\"hourlyRate\"\n                                value={modalData.hourlyRate}\n                                onChange={handleIntegerChange} />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row}\n                        className=\"mb-3\"\n                        controlId=\"formPlaintextPassword\" >\n                        <Form.Label > Company </Form.Label>\n                        <Col sm=\"30\" >\n                            <Form.Control type=\"skills\"\n                                placeholder={user.company}\n                                name=\"company\"\n                                value={modalData.company}\n                                onChange={handleInputChange}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}\n                        className=\"mb-3\"\n                        controlId=\"formPlaintextPassword\" >\n                        <Form.Label > Project example URL </Form.Label>\n                        <Col sm=\"30\" >\n                            <Form.Control type=\"skills\"\n                                name=\"sampleProjectURL\"\n                                placeholder={user.sampleProjectURL}\n                                value={modalData.sampleProjectURL}\n                                onChange={handleInputChange}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}\n                        className=\"mb-3\"\n                        controlId=\"formPlaintextPassword\" >\n                        <Form.Label > Project example name </Form.Label>\n                        <Col sm=\"30\" >\n                            <Form.Control type=\"skills\"\n                                name=\"sampleProjectName\"\n                                placeholder={user.sampleProjectName}\n                                value={modalData.sampleProjectName}\n                                onChange={handleInputChange}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}\n                        className=\"mb-3\"\n                        controlId=\"formPlaintextPassword\" >\n                        <Form.Label > Your Linkedin URL </Form.Label>\n                        <Col sm=\"30\" >\n                            <Form.Control type=\"skills\"\n                                name=\"linkedIn\"\n                                placeholder={user.linkedIn}\n                                value={modalData.linkedIn}\n                                onChange={handleInputChange} />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}\n                        className=\"mb-3\"\n                        controlId=\"formPlaintextPassword\" >\n                        <Form.Label > Your Resume URL </Form.Label> <\n                            Col sm=\"30\" >\n                            <Form.Control type=\"skills\"\n                                name=\"resumeURL\"\n                                placeholder={user.resumeURL}\n                                value={modalData.resumeURL}\n                                onChange={handleInputChange}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}\n                        className=\"mb-3\"\n                        controlId=\"formPlaintextPassword\" >\n                        <Form.Label > Your GitHub URL </Form.Label> <Col sm=\"30\" >\n                            <Form.Control type=\"skills\"\n                                name=\"gitHub\"\n                                placeholder={user.gitHub}\n                                value={modalData.gitHub}\n                                onChange={handleInputChange} />\n                        </Col>\n                    </Form.Group> <Form.Group as={Row}\n                        className=\"mb-3\"\n                        controlId=\"formPlaintextPassword\" >\n                        <Form.Label > Services </Form.Label>\n                        <Col sm=\"30\" >\n                            <Form.Control type=\"skills\"\n                                name=\"servicesOffered\"\n                                placeholder={user.servicesOffered}\n                                value={modalData.servicesOffered}\n                                onChange={handleInputChange}\n                            /> </Col>\n                    </Form.Group>\n                    <Button variant=\"primary\"\n                        onClick={handleModalSubmit}\n                        style={\n                            {\n                                margin: \"0px 45px 45px 45px\",\n                                backgroundColor: \"#4AB8B1\",\n                                border: \"none\",\n                            }\n                        } >\n                        Save Changes </Button>\n                </Form>\n\n            </Modal>\n        </div>\n\n    );\n}","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Signup.js",["107"],"import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nexport default function Signup() {\n    const [formState, setFormState] = useState({\n        fullName: '',\n        email: '',\n        role: '',\n        password: '',\n        company: ''\n    });\n    const [addUser, { error, data }] = useMutation(ADD_USER);\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n\n        try {\n            const {data} = await addUser({\n                variables: { ...formState },\n            });\n\n            Auth.login(data.addUser.token);\n\n            if (data.addUser.user.role === \"developer\") {\n                window.location.assign('/homedev');\n            } else {\n                window.location.assign('/homecli');\n            }\n\n        } catch (e) {\n            console.error({error});\n        }\n    };\n    return (\n        <div style={{ backgroundColor: '#f2f7f2ff', padding: '10px' }}>\n\n            <div className='login-container' style={{ backgroundColor: '#294A66', border: 'none', marginTop: '100px', padding: '30px 20px 50px' }}>\n\n                <p style={{ color: '#F0A202', textAlign: 'center', fontSize: '30px' }} >\n                    Create your <span style={{ fontWeight: 'bold' }}> Find My Coder </span> account!\n                </p>\n\n                <Form className='login-form' style={{ backgroundColor: '#F0A202' }}><Form.Group >\n\n                    <Form.Label style={{ margin: '5px 0 0', fontSize: '20px', Height: '10px' }} > Full Name </Form.Label>\n\n                    <Form.Control\n                        type='text'\n                        placeholder='Full name'\n                        onChange={handleChange}\n                        name=\"fullName\"\n                        value={formState.fullName} >\n                    </Form.Control>\n\n                    <Form.Label style={{ margin: '5px 0', fontSize: '20px' }} > Email </Form.Label>\n\n                    <Form.Control\n                        type='email'\n                        placeholder='email'\n                        onChange={handleChange}\n                        name=\"email\"\n                        value={formState.email}>\n                    </Form.Control>\n\n                    <Form.Label style={{ margin: '5px 0', fontSize: '20px' }} > Password </Form.Label>\n\n                    <Form.Control\n                        name='password'\n                        type='password'\n                        placeholder='password'\n                        value={formState.password}\n                        onChange={handleChange} >\n                    </Form.Control>\n\n                    <Form.Label style={{ margin: '5px 0', fontSize: '20px' }} > Developer / Client </Form.Label>\n\n                    <Form.Select\n                        name=\"role\"\n                        onChange={handleChange} >\n                        <option > Select user type </option>\n                        <option value=\"developer\" > Developer </option>\n                        <option value=\"client\" > Client </option>\n                    </Form.Select>\n\n                    <Form.Label style={{ margin: '5px 0', fontSize: '20px' }} > Company < span style={{ fontStyle: 'italic' }} > (optional) </span></Form.Label >\n\n                    <Form.Control type='text'\n                        placeholder='company name'\n                        name=\"company\"\n                        value={formState.company}\n                        onChange={handleChange} >\n                    </Form.Control>\n\n                </Form.Group>\n                    <Button style={{ backgroundColor: '#294A66', border: 'none', fontSize: '20px', padding: '12px 24px', marginTop: '15px' }}\n                        onClick={handleFormSubmit} > Sign Up\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    );\n}","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\ClientProfile.js",["108"],"import React from \"react\";\nimport Axios from 'axios';\nimport { useState } from \"react\";\nimport { Form, Col, Row, Button, Modal } from \"react-bootstrap\";\nimport { useParams, Navigate } from 'react-router-dom';\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { UPDATE_USER } from \"../utils/mutations\";\nimport { QUERY_SINGLE_USER, QUERY_ME } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\"\n\nexport default function ClientProfile() {\n    const { userId: userParam } = useParams();\n\n    const { loading, data } = useQuery(userParam ? QUERY_SINGLE_USER : QUERY_ME, {\n        variables: { userId: userParam },\n    });\n\n    // console.log(data)\n    const user = data?.me || data?.user || {};\n\n    // console.log(data)\n    // console.log(user)\n    const [modalData, setModalData] = useState({})\n    const [updateUser, { error }] = useMutation(UPDATE_USER);\n    const [show, setShow] = useState(false);\n\n    if (Auth.loggedIn() && Auth.getProfile().data._id === userParam) {\n        return <Navigate to=\"/client\" />\n    }\n\n    if (loading) {\n        return <div> Loading... </div>\n    }\n\n\n    if (!user?.fullName) {\n        return (<h4 style={\n            { padding: '40px', textAlign: 'center', fontSize: '30px', margin: '65px', backgroundColor: '#4AB8B1', color: 'white' }} >\n            You need to be logged in to see your profile page.Use the navigation links above to sign up or log in !\n        </h4>\n        );\n    }\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        // console.log(value)\n        setModalData({ ...modalData, [name]: value, })\n    }\n\n    // const handleIntegerChange = (event) => {\n    //     const { name, value } = event.target;\n    //     // console.log(value)\n    //     setModalData({ ...modalData, [name]: parseInt(value), })\n    // }\n\n    const uploadImage = (files) => {\n        const formData = new FormData();\n        formData.append(\"file\", files[0]);\n        formData.append(\"upload_preset\", \"vylq4hww\");\n\n        Axios.post(\"https://api.cloudinary.com/carissamero/image/upload\", formData)\n            .then((res) => {\n                const profileImageURL = res.data.secure_url;\n                setModalData({ ...modalData, profileImage: profileImageURL })\n            })\n            .catch((e) => {\n                console.log((error));\n            })\n    };\n\n    const handleModalSubmit = async (event) => {\n        event.preventDefault();\n\n        // console.log(modalData)\n        try {\n            const { data } = await updateUser({\n                variables: { userData: { ...modalData } }\n            })\n\n            handleClose()\n            window.location.reload()\n\n        } catch (e) {\n            console.error(error)\n        }\n    }\n    console.log ({data});\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true);\n    return (<div className=\"profiledevcont\"\n        style={\n            { backgroundColor: \"#F0A202\" }} >\n        <h1 className=\"mainh1\"\n            style={\n                { backgroundColor: '#F0A202', paddingTop: '50px' }} > PROFILE: </h1>\n        <div style={\n            { display: 'flex', justifyContent: 'center' }}>\n            <img src={user.profileImage}\n                style={\n                    { maxWidth: \"500px\", display: 'flex' }}\n                alt={\"user profile\"} >\n            </img>\n        </div>\n\n        <div className='profile' >\n            <div className=\"profile-info\" >\n                <h2 className='profiletitles' > Name: </h2>\n                <p className='profiletext' > {user.fullName} </p>\n                <h2 className='profiletitles' > Company: </h2>\n                <p className='profiletext' > {user.company} </p>\n                <h2 className='profiletitles' > Name of Project / Website: </h2>\n                <p className='profiletext' > {user.sampleProjectName} </p>\n                <h2 className='profiletitles' > Type of developer needed: </h2>\n                <p className='profiletext' > {user.primaryFocus} </p>\n                <h2 className='profiletitles' > Services needed: </h2>\n                <p className='profiletext' > {user.servicesOffered} </p>\n                <h2 className='profiletitles' > Contact Info: </h2>\n                <p className='profiletext' > For more details contact me at <a href={'mailto:' + user.email} > {user.email} </a></p > {\n                    Auth.getProfile().data._id === user._id ?\n                        <Button\n                            variant=\"primary\"\n                            onClick={handleShow}\n                            style={\n                                {\n                                    backgroundColor: \"#4AB8B1\",\n                                    border: \"none\",\n                                    fontSize: \"20px\",\n                                    padding: \"12px 24px\",\n                                    marginTop: \"15px\",\n                                }\n                            } >\n                            Edit Profile </Button> : <> </>\n                }\n\n            </div> </div>\n\n        <Modal show={show}\n            onHide={handleClose} >\n            <Modal.Header closeButton >\n                <Modal.Title > Edit Profile </Modal.Title>\n            </Modal.Header>\n            <Form className=\"profileform\"\n                action=\"/upload\"\n                method=\"POST\"\n                enctype=\"multipart/form-data\" >\n                <Form.Group controlId=\"formFile\"\n                    className=\"mb-3\" >\n                    <Form.Label > Upload profile image file </Form.Label>\n                    <Form.Control type=\"file\"\n                        accept=\"image/*\"\n                        onChange={\n                            (event) => {\n                                uploadImage(event.target.files);\n                            }\n                        }\n                    />\n                </Form.Group>\n\n                <Form.Group as={Row}\n                    className=\"mb-3\"\n                    controlId=\"formPlaintextEmail\" >\n                    <Form.Label className=\"formlabel\" > Full Name </Form.Label> <\n                        Col sm=\"30\" >\n                        <Form.Control type=\"text\"\n                            placeholder={user.fullName}\n                            value={modalData.fullName}\n                            name=\"fullName\"\n                            onChange={handleInputChange}\n                        /> </Col>\n                </Form.Group>\n                <Form.Group as={Row}\n                    style={\n                        { paddingBottom: '10px' }}\n                    className=\"mb-3\"\n                    controlId=\"formPlaintextEmail\" >\n                    <Form.Label > What type of web developer are you searching\n                        for ? </Form.Label>\n                    <Form.Select aria-label=\"Floating label select example\"\n                        name=\"primaryFocus\"\n                        onChange={handleInputChange} >\n                        <option style={\n                            { color: 'lightgray' }}\n                            value={modalData.primaryFocus} > Open this menu to select </option>\n                        <option value=\"Front-End\" > Front - End </option>\n                        <option value=\"Back-End\" > Back - End </option>\n                        <option value=\"Full-Stack\" > Full - Stack </option>\n                    </Form.Select>\n                </Form.Group>\n                <Form.Group as={Row}\n                    className=\"mb-3\"\n                    controlId=\"formPlaintextPassword\" >\n\n                    <Form.Label> Company </Form.Label> <\n                        Col sm=\"30\" >\n                        <Form.Control type=\"skills\"\n                            placeholder={user.company}\n                            name=\"company\"\n                            value={modalData.company}\n                            onChange={handleInputChange}\n                        /> </Col> </Form.Group> <Form.Group as={Row}\n                            className=\"mb-3\"\n                            controlId=\"formPlaintextPassword\" >\n                    <Form.Label > Name of Project </Form.Label>\n                    <Col sm=\"30\" >\n                        <Form.Control type=\"skills\"\n                            name=\"sampleProjectName\"\n                            placeholder={user.sampleProjectName}\n                            value={modalData.sampleProjectName}\n                            onChange={handleInputChange} />\n                    </Col>\n                </Form.Group>\n                <Form.Group as={Row}\n                    className=\"mb-3\"\n                    controlId=\"formPlaintextPassword\" >\n                    <Form.Label > Services Needed </Form.Label>\n                    <Col sm=\"30\" >\n                        <Form.Control type=\"skills\"\n                            name=\"servicesOffered\"\n                            placeholder={user.servicesOffered}\n                            value={modalData.servicesOffered}\n                            onChange={handleInputChange} />\n                    </Col>\n                </Form.Group>\n                <Button variant=\"primary\"\n                    onClick={handleModalSubmit}\n                    style={\n                        {\n                            margin: \"0px 45px 45px 45px\",\n                            backgroundColor: \"#4AB8B1\",\n                            border: \"none\",\n                        }\n                    } >\n                    Save Changes\n                </Button>\n            </Form>\n\n        </Modal>\n    </div>\n\n    );\n}","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Search.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\About.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\ProfileClient.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\Navbar\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\utils\\queries.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\utils\\auth.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\FrontEndList\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\FullStackList\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\HomeDevList\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\BackEndList\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\SecondHomeDevList\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\DeveloperList\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\BuyersList\\index.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":10,"column":28,"nodeType":"115","messageId":"116","endLine":10,"endColumn":32},{"ruleId":"113","severity":1,"message":"114","line":77,"column":21,"nodeType":"115","messageId":"116","endLine":77,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":16,"column":30,"nodeType":"115","messageId":"116","endLine":16,"endColumn":34},{"ruleId":"113","severity":1,"message":"114","line":77,"column":21,"nodeType":"115","messageId":"116","endLine":77,"endColumn":25},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]