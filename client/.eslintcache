[{"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\index.js":"1","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\App.js":"2","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\HomeClient.js":"3","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Main.js":"4","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Login.js":"5","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\HomeDev.js":"6","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\ProfileDev.js":"7","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Signup.js":"8","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\ClientProfile.js":"9","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Search.js":"10","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\About.js":"11","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\ProfileClient.js":"12","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\Navbar\\index.js":"13","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\Footer\\Footer.js":"14","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\utils\\mutations.js":"15","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\utils\\queries.js":"16","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\utils\\auth.js":"17","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\FrontEndList\\index.js":"18","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\FullStackList\\index.js":"19","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\HomeDevList\\index.js":"20","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\BackEndList\\index.js":"21","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\SecondHomeDevList\\index.js":"22","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\DeveloperList\\index.js":"23","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\BuyersList\\index.js":"24"},{"size":285,"mtime":1661234500776,"results":"25","hashOfConfig":"26"},{"size":2526,"mtime":1661287693071,"results":"27","hashOfConfig":"26"},{"size":843,"mtime":1661234500777,"results":"28","hashOfConfig":"26"},{"size":4213,"mtime":1661234500778,"results":"29","hashOfConfig":"26"},{"size":3107,"mtime":1661287834488,"results":"30","hashOfConfig":"26"},{"size":5708,"mtime":1661234500777,"results":"31","hashOfConfig":"26"},{"size":15553,"mtime":1661234500779,"results":"32","hashOfConfig":"26"},{"size":4308,"mtime":1661234500780,"results":"33","hashOfConfig":"26"},{"size":9881,"mtime":1661234500777,"results":"34","hashOfConfig":"26"},{"size":3491,"mtime":1661234500780,"results":"35","hashOfConfig":"26"},{"size":11855,"mtime":1661279615585,"results":"36","hashOfConfig":"26"},{"size":3913,"mtime":1661234500779,"results":"37","hashOfConfig":"26"},{"size":5032,"mtime":1661287584288,"results":"38","hashOfConfig":"26"},{"size":2331,"mtime":1661234500725,"results":"39","hashOfConfig":"26"},{"size":828,"mtime":1661234500781,"results":"40","hashOfConfig":"26"},{"size":1017,"mtime":1661234500782,"results":"41","hashOfConfig":"26"},{"size":537,"mtime":1661234500781,"results":"42","hashOfConfig":"26"},{"size":1991,"mtime":1661234500729,"results":"43","hashOfConfig":"26"},{"size":2264,"mtime":1661234500733,"results":"44","hashOfConfig":"26"},{"size":2578,"mtime":1661234500736,"results":"45","hashOfConfig":"26"},{"size":2094,"mtime":1661234500715,"results":"46","hashOfConfig":"26"},{"size":2166,"mtime":1661234500737,"results":"47","hashOfConfig":"26"},{"size":1765,"mtime":1661234500724,"results":"48","hashOfConfig":"26"},{"size":2286,"mtime":1661234500720,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"ciwlu9",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\index.js",[],["102","103"],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\App.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\HomeClient.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Main.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Login.js",["104"],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\HomeDev.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\ProfileDev.js",["105"],"import React from \"react\";\r\nimport Axios from 'axios';\r\nimport { useState } from \"react\";\r\nimport { Form, Col, Row, Button, Modal } from \"react-bootstrap\";\r\nimport { useParams, Navigate } from 'react-router-dom';\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { UPDATE_USER } from \"../utils/mutations\";\r\nimport { QUERY_SINGLE_USER, QUERY_ME } from \"../utils/queries\";\r\n\r\nimport Auth from \"../utils/auth\"\r\n\r\nexport default function ProfileDev() {\r\n    const { userId: userParam } = useParams();\r\n\r\n    const { loading, data } = useQuery(userParam ? QUERY_SINGLE_USER : QUERY_ME, {\r\n        variables: { userId: userParam },\r\n    });\r\n\r\n    // console.log(data)\r\n    const user = data?.me || data?.user || {};\r\n\r\n    // console.log(data)\r\n    // console.log(user)\r\n    const [modalData, setModalData] = useState({})\r\n    const [updateUser, { error }] = useMutation(UPDATE_USER);\r\n    const [show, setShow] = useState(false);\r\n\r\n    if (Auth.loggedIn() && Auth.getProfile().data._id === userParam) {\r\n        return <Navigate to=\"/me\" />\r\n    }\r\n\r\n    if (loading) {\r\n        return <div> Loading... </div>\r\n    }\r\n\r\n\r\n    if (!user?.fullName) {\r\n        return (<h4 style={\r\n            { padding: '40px', textAlign: 'center', fontSize: '30px', margin: '65px', backgroundColor: '#4AB8B1', color: 'white' }} >\r\n            You need to be logged in to see your profile page.Use the navigation links above to sign up or log in !\r\n        </h4>\r\n        );\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        // console.log(value)\r\n        setModalData({ ...modalData, [name]: value, })\r\n    }\r\n\r\n    const handleIntegerChange = (event) => {\r\n        const { name, value } = event.target;\r\n        // console.log(value)\r\n        setModalData({ ...modalData, [name]: parseInt(value), })\r\n    }\r\n\r\n    const uploadImage = (files) => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", files[0]);\r\n        formData.append(\"upload_preset\", \"vylq4hww\");\r\n\r\n        Axios.post(\"https://api.cloudinary.com/v1_1/carissamero/image/upload\", formData)\r\n            .then((res) => {\r\n                const profileImageURL = res.data.secure_url;\r\n                setModalData({ ...modalData, profileImage: profileImageURL })\r\n            })\r\n            .catch(e => {\r\n                console.log({error});\r\n            })\r\n    };\r\n\r\n    const handleModalSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // console.log(modalData)\r\n        try {\r\n            const { data } = await updateUser({\r\n                variables: { userData: { ...modalData } }\r\n            })\r\n\r\n            handleClose()\r\n            window.location.reload()\r\n\r\n        } catch (e) {\r\n            console.error({error})\r\n        }\r\n    }\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true);\r\n    return (\r\n        <div className=\"profiledevcont\"\r\n            style={{ backgroundColor: \"#F0A202\" }}>\r\n\r\n            <h1 className=\"mainh1\"\r\n                style={{ backgroundColor: '#F0A202', paddingTop: '50px' }} > PROFILE:\r\n            </h1>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n\r\n                <img src={user.profileImage}\r\n                    style={{ maxWidth: \"500px\", display: 'flex' }}\r\n                    alt={\"user profile\"} >\r\n                </img>\r\n            </div>\r\n\r\n            <div className='profile' >\r\n                <div className=\"profile-info\" >\r\n                    <h2 className='profiletitles' > Name: </h2>\r\n                    <p className='profiletext' > {user.fullName} </p>\r\n                    <h2 className='profiletitles' > Description: </h2>\r\n                    <p className='profiletext' > {user.userDescription} </p>\r\n                    <h2 className='profiletitles' > Type of developer: </h2>\r\n                    <p className='profiletext' > {user.primaryFocus} </p>\r\n                    <h2 className='profiletitles' > Skills: </h2>\r\n                    <p className='profiletext' > {user.skillSet} </p>\r\n                    <h2 className='profiletitles' > Hourly rate: </h2>\r\n                    <p className='profiletext' > $ {user.hourlyRate}/hr</p >\r\n                    <h2 className='profiletitles' > Company: </h2>\r\n                    <p className='profiletext' > {user.company} </p>\r\n                    <h2 className='profiletitles' > Project name: </h2>\r\n                    <p className='profiletext' > {user.sampleProjectName} </p>\r\n                    <h2 className='profiletitles' > Project URL: </h2>\r\n\r\n                    <a className='profiletext'\r\n                        href={user.sampleProjectURL}> {user.sampleProjectURL}\r\n                    </a>\r\n\r\n                    <h2 className='profiletitles' > Linkedin URL: </h2>\r\n\r\n                    <a className='profiletext'\r\n                        href={user.linkedIn} > {user.linkedIn}\r\n                    </a>\r\n\r\n                    <h2 className='profiletitles' > Github URL </h2>\r\n\r\n                    <a className='profiletext'\r\n                        href={user.gitHub} > {user.gitHub}\r\n                    </a>\r\n\r\n                    <h2 className='profiletitles' > Services: </h2>\r\n                    <p className='profiletext' > {user.servicesOffered} </p>\r\n                    <h2 className='profiletitles' > Contact Info: </h2>\r\n                    <p className='profiletext' > {user.email} </p>\r\n\r\n                    <Button variant=\"primary\"\r\n                        onClick={handleShow}\r\n                        style={\r\n                            {\r\n                                backgroundColor: \"#4AB8B1\",\r\n                                border: \"none\",\r\n                                fontSize: \"20px\",\r\n                                padding: \"12px 24px\",\r\n                                marginTop: \"15px\",\r\n                            }\r\n                        } >\r\n                        Edit Profile\r\n                    </Button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}>\r\n                <Modal.Header closeButton >\r\n                    <Modal.Title > Edit Profile </Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Form className=\"profileform\"\r\n                    action=\"/upload\"\r\n                    method=\"POST\"\r\n                    enctype=\"multipart/form-data\" >\r\n\r\n                    <Form.Group controlId=\"formFile\"\r\n                        className=\"mb-3\" >\r\n\r\n                        <Form.Label > Upload profile image file </Form.Label>\r\n                        <Form.Control type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={\r\n                                (event) => {\r\n                                    uploadImage(event.target.files);\r\n                                }\r\n                            } />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formPlaintextEmail\" >\r\n\r\n                        <Form.Label className=\"formlabel\" > Full Name </Form.Label>\r\n\r\n                        <Col sm=\"30\" >\r\n\r\n                            <Form.Control type=\"text\"\r\n                                placeholder={user.fullName}\r\n                                value={modalData.fullName}\r\n                                name=\"fullName\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Col>\r\n\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}\r\n                        style={\r\n                            { paddingBottom: '10px' }}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formPlaintextEmail\" >\r\n                        <Form.Label > What type of web developer are you ? </Form.Label>\r\n\r\n                        <Form.Select aria-label=\"Floating label select example\"\r\n                            name=\"primaryFocus\"\r\n                            onChange={handleInputChange} >\r\n                            <option style={\r\n                                { color: 'lightgray' }}\r\n                                value={modalData.primaryFocus} > Open this menu to select </option>\r\n                            <option value=\"Front-End\" > Front - End </option>\r\n                            <option value=\"Back-End\" > Back - End </option>\r\n                            <option value=\"Full-Stack\" > Full - Stack </option>\r\n                        </Form.Select>\r\n\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formPlaintextPassword\" >\r\n                        <Form.Label > Profile description </Form.Label>\r\n                        <Col sm=\"30\" >\r\n                            <Form.Control type=\"text\"\r\n                                placeholder={user.userDescription}\r\n                                name=\"userDescription\"\r\n                                value={modalData.userDescription}\r\n                                onChange={handleInputChange} />\r\n                        </Col>\r\n\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formPlaintextPassword\" >\r\n                        <Form.Label > Skills </Form.Label>\r\n                        <Col sm=\"30\" >\r\n                            <Form.Control type=\"skills\"\r\n                                placeholder={user.skillSet}\r\n                                name=\"skillSet\"\r\n                                value={modalData.skillSet}\r\n                                onChange={handleInputChange} />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formPlaintextPassword\" >\r\n                        <Form.Label > Hourly rate </Form.Label>\r\n                        <Col sm=\"30\" >\r\n                            <Form.Control type=\"text\"\r\n                                placeholder={user.hourlyRate}\r\n                                name=\"hourlyRate\"\r\n                                value={modalData.hourlyRate}\r\n                                onChange={handleIntegerChange} />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formPlaintextPassword\" >\r\n                        <Form.Label > Company </Form.Label>\r\n                        <Col sm=\"30\" >\r\n                            <Form.Control type=\"skills\"\r\n                                placeholder={user.company}\r\n                                name=\"company\"\r\n                                value={modalData.company}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formPlaintextPassword\" >\r\n                        <Form.Label > Project example URL </Form.Label>\r\n                        <Col sm=\"30\" >\r\n                            <Form.Control type=\"skills\"\r\n                                name=\"sampleProjectURL\"\r\n                                placeholder={user.sampleProjectURL}\r\n                                value={modalData.sampleProjectURL}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formPlaintextPassword\" >\r\n                        <Form.Label > Project example name </Form.Label>\r\n                        <Col sm=\"30\" >\r\n                            <Form.Control type=\"skills\"\r\n                                name=\"sampleProjectName\"\r\n                                placeholder={user.sampleProjectName}\r\n                                value={modalData.sampleProjectName}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formPlaintextPassword\" >\r\n                        <Form.Label > Your Linkedin URL </Form.Label>\r\n                        <Col sm=\"30\" >\r\n                            <Form.Control type=\"skills\"\r\n                                name=\"linkedIn\"\r\n                                placeholder={user.linkedIn}\r\n                                value={modalData.linkedIn}\r\n                                onChange={handleInputChange} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formPlaintextPassword\" >\r\n                        <Form.Label > Your Resume URL </Form.Label> <\r\n                            Col sm=\"30\" >\r\n                            <Form.Control type=\"skills\"\r\n                                name=\"resumeURL\"\r\n                                placeholder={user.resumeURL}\r\n                                value={modalData.resumeURL}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formPlaintextPassword\" >\r\n                        <Form.Label > Your GitHub URL </Form.Label> <Col sm=\"30\" >\r\n                            <Form.Control type=\"skills\"\r\n                                name=\"gitHub\"\r\n                                placeholder={user.gitHub}\r\n                                value={modalData.gitHub}\r\n                                onChange={handleInputChange} />\r\n                        </Col>\r\n                    </Form.Group> <Form.Group as={Row}\r\n                        className=\"mb-3\"\r\n                        controlId=\"formPlaintextPassword\" >\r\n                        <Form.Label > Services </Form.Label>\r\n                        <Col sm=\"30\" >\r\n                            <Form.Control type=\"skills\"\r\n                                name=\"servicesOffered\"\r\n                                placeholder={user.servicesOffered}\r\n                                value={modalData.servicesOffered}\r\n                                onChange={handleInputChange}\r\n                            /> </Col>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\"\r\n                        onClick={handleModalSubmit}\r\n                        style={\r\n                            {\r\n                                margin: \"0px 45px 45px 45px\",\r\n                                backgroundColor: \"#4AB8B1\",\r\n                                border: \"none\",\r\n                            }\r\n                        } >\r\n                        Save Changes </Button>\r\n                </Form>\r\n\r\n            </Modal>\r\n        </div>\r\n\r\n    );\r\n}","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Signup.js",["106"],"import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nexport default function Signup() {\r\n    const [formState, setFormState] = useState({\r\n        fullName: '',\r\n        email: '',\r\n        role: '',\r\n        password: '',\r\n        company: ''\r\n    });\r\n    const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n\r\n        try {\r\n            const {data} = await addUser({\r\n                variables: { ...formState },\r\n            });\r\n\r\n            Auth.login(data.addUser.token);\r\n\r\n            if (data.addUser.user.role === \"developer\") {\r\n                window.location.assign('/homedev');\r\n            } else {\r\n                window.location.assign('/homecli');\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error({error});\r\n        }\r\n    };\r\n    return (\r\n        <div style={{ backgroundColor: '#f2f7f2ff', padding: '10px' }}>\r\n\r\n            <div className='login-container' style={{ backgroundColor: '#294A66', border: 'none', marginTop: '100px', padding: '30px 20px 50px' }}>\r\n\r\n                <p style={{ color: '#F0A202', textAlign: 'center', fontSize: '30px' }} >\r\n                    Create your <span style={{ fontWeight: 'bold' }}> Find My Coder </span> account!\r\n                </p>\r\n\r\n                <Form className='login-form' style={{ backgroundColor: '#F0A202' }}><Form.Group >\r\n\r\n                    <Form.Label style={{ margin: '5px 0 0', fontSize: '20px', Height: '10px' }} > Full Name </Form.Label>\r\n\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Full name'\r\n                        onChange={handleChange}\r\n                        name=\"fullName\"\r\n                        value={formState.fullName} >\r\n                    </Form.Control>\r\n\r\n                    <Form.Label style={{ margin: '5px 0', fontSize: '20px' }} > Email </Form.Label>\r\n\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='email'\r\n                        onChange={handleChange}\r\n                        name=\"email\"\r\n                        value={formState.email}>\r\n                    </Form.Control>\r\n\r\n                    <Form.Label style={{ margin: '5px 0', fontSize: '20px' }} > Password </Form.Label>\r\n\r\n                    <Form.Control\r\n                        name='password'\r\n                        type='password'\r\n                        placeholder='password'\r\n                        value={formState.password}\r\n                        onChange={handleChange} >\r\n                    </Form.Control>\r\n\r\n                    <Form.Label style={{ margin: '5px 0', fontSize: '20px' }} > Developer / Client </Form.Label>\r\n\r\n                    <Form.Select\r\n                        name=\"role\"\r\n                        onChange={handleChange} >\r\n                        <option > Select user type </option>\r\n                        <option value=\"developer\" > Developer </option>\r\n                        <option value=\"client\" > Client </option>\r\n                    </Form.Select>\r\n\r\n                    <Form.Label style={{ margin: '5px 0', fontSize: '20px' }} > Company < span style={{ fontStyle: 'italic' }} > (optional) </span></Form.Label >\r\n\r\n                    <Form.Control type='text'\r\n                        placeholder='company name'\r\n                        name=\"company\"\r\n                        value={formState.company}\r\n                        onChange={handleChange} >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n                    <Button style={{ backgroundColor: '#294A66', border: 'none', fontSize: '20px', padding: '12px 24px', marginTop: '15px' }}\r\n                        onClick={handleFormSubmit} > Sign Up\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\ClientProfile.js",["107"],"import React from \"react\";\r\nimport Axios from 'axios';\r\nimport { useState } from \"react\";\r\nimport { Form, Col, Row, Button, Modal } from \"react-bootstrap\";\r\nimport { useParams, Navigate } from 'react-router-dom';\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { UPDATE_USER } from \"../utils/mutations\";\r\nimport { QUERY_SINGLE_USER, QUERY_ME } from \"../utils/queries\";\r\n\r\nimport Auth from \"../utils/auth\"\r\n\r\nexport default function ClientProfile() {\r\n    const { userId: userParam } = useParams();\r\n\r\n    const { loading, data } = useQuery(userParam ? QUERY_SINGLE_USER : QUERY_ME, {\r\n        variables: { userId: userParam },\r\n    });\r\n\r\n    // console.log(data)\r\n    const user = data?.me || data?.user || {};\r\n\r\n    // console.log(data)\r\n    // console.log(user)\r\n    const [modalData, setModalData] = useState({})\r\n    const [updateUser, { error }] = useMutation(UPDATE_USER);\r\n    const [show, setShow] = useState(false);\r\n\r\n    if (Auth.loggedIn() && Auth.getProfile().data._id === userParam) {\r\n        return <Navigate to=\"/client\" />\r\n    }\r\n\r\n    if (loading) {\r\n        return <div> Loading... </div>\r\n    }\r\n\r\n\r\n    if (!user?.fullName) {\r\n        return (<h4 style={\r\n            { padding: '40px', textAlign: 'center', fontSize: '30px', margin: '65px', backgroundColor: '#4AB8B1', color: 'white' }} >\r\n            You need to be logged in to see your profile page.Use the navigation links above to sign up or log in !\r\n        </h4>\r\n        );\r\n    }\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        // console.log(value)\r\n        setModalData({ ...modalData, [name]: value, })\r\n    }\r\n\r\n    // const handleIntegerChange = (event) => {\r\n    //     const { name, value } = event.target;\r\n    //     // console.log(value)\r\n    //     setModalData({ ...modalData, [name]: parseInt(value), })\r\n    // }\r\n\r\n    const uploadImage = (files) => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", files[0]);\r\n        formData.append(\"upload_preset\", \"vylq4hww\");\r\n\r\n        Axios.post(\"https://api.cloudinary.com/carissamero/image/upload\", formData)\r\n            .then((res) => {\r\n                const profileImageURL = res.data.secure_url;\r\n                setModalData({ ...modalData, profileImage: profileImageURL })\r\n            })\r\n            .catch((e) => {\r\n                console.log((error));\r\n            })\r\n    };\r\n\r\n    const handleModalSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // console.log(modalData)\r\n        try {\r\n            const { data } = await updateUser({\r\n                variables: { userData: { ...modalData } }\r\n            })\r\n\r\n            handleClose()\r\n            window.location.reload()\r\n\r\n        } catch (e) {\r\n            console.error(error)\r\n        }\r\n    }\r\n    console.log ({data});\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true);\r\n    return (<div className=\"profiledevcont\"\r\n        style={\r\n            { backgroundColor: \"#F0A202\" }} >\r\n        <h1 className=\"mainh1\"\r\n            style={\r\n                { backgroundColor: '#F0A202', paddingTop: '50px' }} > PROFILE: </h1>\r\n        <div style={\r\n            { display: 'flex', justifyContent: 'center' }}>\r\n            <img src={user.profileImage}\r\n                style={\r\n                    { maxWidth: \"500px\", display: 'flex' }}\r\n                alt={\"user profile\"} >\r\n            </img>\r\n        </div>\r\n\r\n        <div className='profile' >\r\n            <div className=\"profile-info\" >\r\n                <h2 className='profiletitles' > Name: </h2>\r\n                <p className='profiletext' > {user.fullName} </p>\r\n                <h2 className='profiletitles' > Company: </h2>\r\n                <p className='profiletext' > {user.company} </p>\r\n                <h2 className='profiletitles' > Name of Project / Website: </h2>\r\n                <p className='profiletext' > {user.sampleProjectName} </p>\r\n                <h2 className='profiletitles' > Type of developer needed: </h2>\r\n                <p className='profiletext' > {user.primaryFocus} </p>\r\n                <h2 className='profiletitles' > Services needed: </h2>\r\n                <p className='profiletext' > {user.servicesOffered} </p>\r\n                <h2 className='profiletitles' > Contact Info: </h2>\r\n                <p className='profiletext' > For more details contact me at <a href={'mailto:' + user.email} > {user.email} </a></p > {\r\n                    Auth.getProfile().data._id === user._id ?\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            onClick={handleShow}\r\n                            style={\r\n                                {\r\n                                    backgroundColor: \"#4AB8B1\",\r\n                                    border: \"none\",\r\n                                    fontSize: \"20px\",\r\n                                    padding: \"12px 24px\",\r\n                                    marginTop: \"15px\",\r\n                                }\r\n                            } >\r\n                            Edit Profile </Button> : <> </>\r\n                }\r\n\r\n            </div> </div>\r\n\r\n        <Modal show={show}\r\n            onHide={handleClose} >\r\n            <Modal.Header closeButton >\r\n                <Modal.Title > Edit Profile </Modal.Title>\r\n            </Modal.Header>\r\n            <Form className=\"profileform\"\r\n                action=\"/upload\"\r\n                method=\"POST\"\r\n                enctype=\"multipart/form-data\" >\r\n                <Form.Group controlId=\"formFile\"\r\n                    className=\"mb-3\" >\r\n                    <Form.Label > Upload profile image file </Form.Label>\r\n                    <Form.Control type=\"file\"\r\n                        accept=\"image/*\"\r\n                        onChange={\r\n                            (event) => {\r\n                                uploadImage(event.target.files);\r\n                            }\r\n                        }\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}\r\n                    className=\"mb-3\"\r\n                    controlId=\"formPlaintextEmail\" >\r\n                    <Form.Label className=\"formlabel\" > Full Name </Form.Label> <\r\n                        Col sm=\"30\" >\r\n                        <Form.Control type=\"text\"\r\n                            placeholder={user.fullName}\r\n                            value={modalData.fullName}\r\n                            name=\"fullName\"\r\n                            onChange={handleInputChange}\r\n                        /> </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}\r\n                    style={\r\n                        { paddingBottom: '10px' }}\r\n                    className=\"mb-3\"\r\n                    controlId=\"formPlaintextEmail\" >\r\n                    <Form.Label > What type of web developer are you searching\r\n                        for ? </Form.Label>\r\n                    <Form.Select aria-label=\"Floating label select example\"\r\n                        name=\"primaryFocus\"\r\n                        onChange={handleInputChange} >\r\n                        <option style={\r\n                            { color: 'lightgray' }}\r\n                            value={modalData.primaryFocus} > Open this menu to select </option>\r\n                        <option value=\"Front-End\" > Front - End </option>\r\n                        <option value=\"Back-End\" > Back - End </option>\r\n                        <option value=\"Full-Stack\" > Full - Stack </option>\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                <Form.Group as={Row}\r\n                    className=\"mb-3\"\r\n                    controlId=\"formPlaintextPassword\" >\r\n\r\n                    <Form.Label> Company </Form.Label> <\r\n                        Col sm=\"30\" >\r\n                        <Form.Control type=\"skills\"\r\n                            placeholder={user.company}\r\n                            name=\"company\"\r\n                            value={modalData.company}\r\n                            onChange={handleInputChange}\r\n                        /> </Col> </Form.Group> <Form.Group as={Row}\r\n                            className=\"mb-3\"\r\n                            controlId=\"formPlaintextPassword\" >\r\n                    <Form.Label > Name of Project </Form.Label>\r\n                    <Col sm=\"30\" >\r\n                        <Form.Control type=\"skills\"\r\n                            name=\"sampleProjectName\"\r\n                            placeholder={user.sampleProjectName}\r\n                            value={modalData.sampleProjectName}\r\n                            onChange={handleInputChange} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}\r\n                    className=\"mb-3\"\r\n                    controlId=\"formPlaintextPassword\" >\r\n                    <Form.Label > Services Needed </Form.Label>\r\n                    <Col sm=\"30\" >\r\n                        <Form.Control type=\"skills\"\r\n                            name=\"servicesOffered\"\r\n                            placeholder={user.servicesOffered}\r\n                            value={modalData.servicesOffered}\r\n                            onChange={handleInputChange} />\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button variant=\"primary\"\r\n                    onClick={handleModalSubmit}\r\n                    style={\r\n                        {\r\n                            margin: \"0px 45px 45px 45px\",\r\n                            backgroundColor: \"#4AB8B1\",\r\n                            border: \"none\",\r\n                        }\r\n                    } >\r\n                    Save Changes\r\n                </Button>\r\n            </Form>\r\n\r\n        </Modal>\r\n    </div>\r\n\r\n    );\r\n}","C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\Search.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\About.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\pages\\ProfileClient.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\Navbar\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\utils\\queries.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\utils\\auth.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\FrontEndList\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\FullStackList\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\HomeDevList\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\BackEndList\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\SecondHomeDevList\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\DeveloperList\\index.js",[],"C:\\Users\\Kenneth\\Desktop\\Coder-Finder\\client\\src\\components\\BuyersList\\index.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":10,"column":28,"nodeType":"114","messageId":"115","endLine":10,"endColumn":32},{"ruleId":"112","severity":1,"message":"113","line":77,"column":21,"nodeType":"114","messageId":"115","endLine":77,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":16,"column":30,"nodeType":"114","messageId":"115","endLine":16,"endColumn":34},{"ruleId":"112","severity":1,"message":"113","line":77,"column":21,"nodeType":"114","messageId":"115","endLine":77,"endColumn":25},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]